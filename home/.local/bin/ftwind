#!/usr/bin/env bash -f
# ftwind - switch window (based on @george-b)
# based on pokey's ftwind at https://github.com/pokey/dotfiles/blob/dade6c88af31458c323e8f0247af510bca7af0f5/bin/ftwind
#
# customized by anelson to list all windows in all sessions and to list more information

# Get information about windows from tmux
# This includes sort keys at the beginning to sort by recency of use of both the session and the
# windows within it.  Those keys will be stripped out once the output has been sorted
windows_str=$( \
   tmux list-windows -a -F "#{session_last_attached}|#{window_stack_index}|#S\t#{pane_current_path}\t#I:#{window_name}\t#{window_active}\t#{window_id}" | \
   sort --key 1r,2n "--field-separator=|" | \
   cut -d "|" -f 3
)

# Process windows_str
windows=''
delim=''
actives=()
nums=()
while read -r line; do
   line=$(echo -e "$line")
   IFS=$'\t' read -a line_array <<<"$line"

   session=${line_array[0]}
   dir_name=${line_array[1]}
   IFS=':' read -a window_num_and_name <<<"${line_array[2]}"
   num=${window_num_and_name[0]}
   name=${window_num_and_name[1]}
   active=${line_array[3]}
   window_id=${line_array[4]}

   # Change color and add * if active
   if [ "$active" -eq "1" ];
   then
      active="*"
      actives+=("*")
   else
      active=" "
      actives+=(" ")
   fi

   # Create output line
   out=$(echo -e "$active\t$session\t$num:$name\t$dir_name\t$window_id")

   # Add to windows string
   windows=$(printf '%s%s%s' "$windows" "$delim" "$out")

   # So that join works
   delim=$'\n'
done <<< "$windows_str"

# Align on columns
#
# The --table-columns option is specific to GNU `column`, and isn't available with the BSD `column` that ships with macOS
#windows=$(column -s $'\t' --table-columns " ,Session,Window,Current Directory,ID" -t <<< "$windows")
windows=$(column -s $'\t'  -t <<< "$windows")

# Split by newlines
IFS=$'\n' read -rd '' -a window_arr <<<"$windows"

# Run fzf and check result
# Note the use of 'sed' to strip the "*" which might be there if the selected window is active
target_window_id=$(echo "$windows" | \
   fzf-tmux +m --header-lines=1 --no-sort --ansi | \
   sed -e 's/^\s*\*//g' | \
   awk '{ print $NF }' \
)
res=$?
[ "$res" -eq "130" ] && exit 0
[ "$res" -eq "0" ] || exit $res

# We have the window ID which is unique.  Find it's session
target_session=$(tmux list-windows -a -F "#{window_id} #{session_name}" | grep -sw "$target_window_id" | head -n 1 | cut -d ' ' -f 2)

#echo "Target window ID: ${target_window_id}"
#echo "Target session: ${target_session}"

tmux switch-client -t "$target_session"
tmux select-window -t "$target_window_id"
