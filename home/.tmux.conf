# Use a saner prefix
set -g prefix C-a
unbind C-b

# Double-tap C-a to passthrough to the terminal
bind C-a send-prefix

# Enable (begrudingly) mouse support
set -g mouse on

# Use vi mode keys to navigate buffers
setw -g mode-keys vi

# Now that i've switched to alacritty, which does seem to support the ANSI OSC escape sequence
# used by this feature, turn this back on.
#
# This assumes there's one terminal app, with one tmux session.  If you run local tmux and then ssh
# into a server and run tmux there, this doesn't work right
# See https://medium.freecodecamp.org/tmux-in-practice-integration-with-system-clipboard-bcd72c62ff7b
# for more.
set -g set-clipboard on

# Make copy mode a bit more vim-like
bind Escape copy-mode
bind -T copy-mode-vi v send -X begin-selection
# bind -T copy-mode-vi y send -X copy-pipe 'xclip -in -selection clipboard'\; send -X cancel
bind -T copy-mode-vi Escape send -X cancel
unbind p
bind p paste-buffer

# For the love of Christ, moar color!
# Note this is usually 'screen-256color' for compatibility with screen
# but tmux interprets this as a signal that it should behave like screen
# which among other things means not supporting italics.  That's a deal breaker
# for me.  setting this to the more modern tmux should fix this, but the caveat
# is that systems I ssh into need to have a 'tmux' in their termcap.  Here's hoping
# that's the case
# 
# NB: On systems like RHEL/CentOS as recently at 7.5, it is NOT the case.  Workarounds 
# are to start SSH with a TERM=screen-256color env var, or send the local system's
# termcap to the remote system (requires root)
#
# Do that latter thusly:
# $ infocmp | ssh root@remote-host "tic -"
#set -g default-terminal "screen-256color"
set -g default-terminal "tmux"

# truecolor if you please
# this is a bit of a hack.  alacritty reports itself as xterm-256color
# and I know that's what I use and I know that suppports true color
# but lots of terminals report this, if running on a system in a terminal
# without truecolor support this will probably lead to a bad time
set-option -ga terminal-overrides ",xterm-256color:Tc"

# shorten the delay between prefix and command for a better vim experience
set -s escape-time 1

# Start window and pane numbering at 1 instead of 0
set -g base-index 1
setw -g pane-base-index 1 

# Bind a shortcut for reloading the config
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# More memorable split bindings
bind | split-window -h
bind - split-window -v

# More memorable movement bindings
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Same for sizing bindings
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# when using the main-horizonal built-in layout
# the bottom panes should be small
set-window-option -g other-pane-height 10

# Monitor activity in other windows, taht's handy
setw -g monitor-activity on

# tmux version of alt-tab, switch to last used window in current session
bind Tab last-window

# set up user-defined key bindings for Control-Tab and Control-Shift-Tab
# NOTE: terminals don't by default seem to do this properly.  Alacritty can be configured to do so; presumably other terms can also.

set -s user-keys[0] "\e[1;5I" # Control-Tab
set -s user-keys[1] "\e[1;6I" # Control-Shift-Tab

# using C-T and C-S-T WITHOUT the leader key first, to switch to the last window or session
bind-key -n User0 last-window
bind-key -n User1 switchc -l

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

#set -g @plugin 'seebi/tmux-colors-solarized'

## Use the solarized dark theme
#set -g @colors-solarized 'dark'
#set -g @plugin 'egel/tmux-gruvbox'
# this is from egel/tmux-gruvbox but sadly it's not implemented as a tpm plugin
source-file ~/.config/tmux-gruvbox-dark.conf

# Sync pane navigation keys with vim
set -g @plugin 'christoomey/vim-tmux-navigator'

# Open files from within tmux by selecting their name
set -g @plugin 'tmux-plugins/tmux-open'

# Enhance tmux search by supporting regexes and hugely, predefined searches
set -g @plugin 'tmux-plugins/tmux-copycat'

# Save and automatically restore tmux sessions, WOW!
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-boot 'on' # instruct tmux-continuum to create a user systemd service
set -g @resurrect-strategy-nvim 'session' #even resurrect vim sessions OMFG!

# Install TPM if it's not already there
# Per https://github.com/tmux-plugins/tpm/blob/master/docs/automatic_tpm_installation.md
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
