# See https://github.com/swaywm/sway/wiki for config options
#
# Migrated from `.config/i3/config` and adapted for sway

# Use the "windows" key for the modifier
set $mod Mod4

# Alt is used when changing the keyboard layout
set $alt Alt_L

# Your preferred terminal emulator
set $term alacritty

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu wofi --show drun,run --allow-images --allow-markup --term=$term | swaymsg exec --

# Preferred screen locker
set $lock swaylock --daemonize

### Output configuration
#
# Randomly choose a wallpaper
#
# For some reason this use of backticks in `output` always fails with an "Invalid syntax" error for me, even though I see it used online a lot.
#output * bg `fd . $HOME/.wallpaper | sort -R | head -1` fill
output * bg $HOME/.wallpaper/earth_from_space_2-wallpaper-3840x2160.jpg fill

#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' \
#               resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
exec swayidle -w \
         timeout 600 'swaymsg "output * dpms off"' \
         timeout 630 '$lock' \
              resume 'swaymsg "output * dpms on"' \
         before-sleep '$lock'

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
#
input type:keyboard {
    # US layout is default, russian is available
    xkb_layout us,ru

    # See the /usr/share/X11/xkb/rules/evdev.lst file for the list of built-in xkb rules that can be applied here
    #
    # Map caps lock to escape
    # Switch keyboard layouts with left-alt+left-shift
    xkb_options caps:escape,grp:lalt_lshift_toggle
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

    # Send signal 1 to waybar when changing keyboard layout
    #
    # I can't make this work.  It seems sway never sees this sequence because it's already intercepeted to change the keyboard layout
    bindsym $alt+Shift_L exec "pkill --signal SIGRTMIN+1 waybar"
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # pick fontawesome icons from https://fontawesome.bootstrapcheatsheets.com/
    # firefox
    set $ws1  "1: "

    # terminals
    set $ws2  "2: "

    # code
    set $ws3  "3: "

    # ???
    set $ws4  "4: "

    # windows VM
    set $ws5  "5: "

    # file explorer
    set $ws6  "6: "

    # spotify or other music
    set $ws7  "7: "

    # skype (and other chats)
    set $ws8  "8: "

    # mail client
    set $ws9  "9: "

    # chrome
    set $ws10 "10: "

    # Switch to workspace
    bindsym $mod+1 workspace $ws1
    bindsym $mod+2 workspace $ws2
    bindsym $mod+3 workspace $ws3
    bindsym $mod+4 workspace $ws4
    bindsym $mod+5 workspace $ws5
    bindsym $mod+6 workspace $ws6
    bindsym $mod+7 workspace $ws7
    bindsym $mod+8 workspace $ws8
    bindsym $mod+9 workspace $ws9
    bindsym $mod+0 workspace $ws10
    bindsym $mod+Tab workspace back_and_forth

    # move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number $ws1
    bindsym $mod+Shift+2 move container to workspace number $ws2
    bindsym $mod+Shift+3 move container to workspace number $ws3
    bindsym $mod+Shift+4 move container to workspace number $ws4
    bindsym $mod+Shift+5 move container to workspace number $ws5
    bindsym $mod+Shift+6 move container to workspace number $ws6
    bindsym $mod+Shift+7 move container to workspace number $ws7
    bindsym $mod+Shift+8 move container to workspace number $ws8
    bindsym $mod+Shift+9 move container to workspace number $ws9
    bindsym $mod+Shift+0 move container to workspace number $ws10

    # move focused container to workspace and switch to that workspace
    bindsym $mod+Control+1 move container to workspace number $ws1, workspace $ws1
    bindsym $mod+Control+2 move container to workspace number $ws2, workspace $ws2
    bindsym $mod+Control+3 move container to workspace number $ws3, workspace $ws3
    bindsym $mod+Control+4 move container to workspace number $ws4, workspace $ws4
    bindsym $mod+Control+5 move container to workspace number $ws5, workspace $ws5
    bindsym $mod+Control+6 move container to workspace number $ws6, workspace $ws6
    bindsym $mod+Control+7 move container to workspace number $ws7, workspace $ws7
    bindsym $mod+Control+8 move container to workspace number $ws8, workspace $ws8
    bindsym $mod+Control+9 move container to workspace number $ws9, workspace $ws9
    bindsym $mod+Control+0 move container to workspace number $ws10, workspace $ws10

    # move workspaces between monitors
    bindsym $mod+Shift+bracketright   move workspace to output right
    bindsym $mod+Shift+bracketleft   move workspace to output left

    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

include /etc/sway/config.d/*

### Appearance

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:System San Francisco Display 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

set $bg-color 	         #2f343f
set $inactive-bg-color   #2f343f
set $text-color          #f3f4f5
set $inactive-text-color #676E7D
set $urgent-bg-color     #E53935

set $default_gaps_inner 10
set $default_gaps_outer 0
gaps inner $default_gaps_inner
gaps outer $default_gaps_outer

# this is annoying; just use Mod-Tab
workspace_auto_back_and_forth no

force_display_urgency_hint 500 ms
focus_on_window_activation urgent

# this is very annoying
focus_follows_mouse no

floating_minimum_size -1 x -1
floating_maximum_size -1 x -1

# window colors
#                       border              background         text                 indicator
client.focused          $bg-color           $bg-color          $text-color          #00ff00
client.unfocused        $inactive-bg-color $inactive-bg-color $inactive-text-color #00ff00
client.focused_inactive $inactive-bg-color $inactive-bg-color $inactive-text-color #00ff00
client.urgent           $urgent-bg-color $urgent-bg-color $text-color #00ff00

## gaps config
set $mode_gaps gaps
set $mode_gaps_outer outer gaps
set $mode_gaps_inner inner gaps
bindsym $mod+Shift+g mode "$mode_gaps"
mode "$mode_gaps" {
    bindsym o      mode "$mode_gaps_outer"
    bindsym i      mode "$mode_gaps_inner"

    bindsym 0      mode "default", exec --no-startup-id i3-msg "gaps inner current set 0" && i3-msg "gaps outer current set 0"
    bindsym d      mode "default", exec --no-startup-id i3-msg "gaps inner current set $default_gaps_inner" && i3-msg "gaps outer current set $default_gaps_outer"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
    bindsym plus  gaps inner current plus 5
    bindsym minus gaps inner current minus 5
    bindsym 0     mode "default", gaps inner current set 0
    bindsym d     mode "default", gaps inner current set $default_gaps_inner

    bindsym Shift+plus  gaps inner all plus 5
    bindsym Shift+minus gaps inner all minus 5
    bindsym Shift+0     mode "default", gaps inner all set 0
    bindsym Shift+d     mode "default", gaps inner all set $default_gaps_inner

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
    bindsym plus  gaps outer current plus 5
    bindsym minus gaps outer current minus 5
    bindsym 0     mode "default", gaps outer current set 0
    bindsym d     mode "default", gaps outer current set $default_gaps_outer

    bindsym Shift+plus  gaps outer all plus 5
    bindsym Shift+minus gaps outer all minus 5
    bindsym Shift+0     mode "default", gaps outer all set 0
    bindsym Shift+d     mode "default", gaps outer all set $default_gaps_outer

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# fix graphics glitch
default_border none

### Override specific windows that should be floated

for_window [class="^.*"] border pixel 0
for_window [window_role="pop-up"] floating enable
for_window [window_role="bubble"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [window_role="Preferences"] floating enable

for_window [window_type="dialog"] floating enable
for_window [window_type="menu"] floating enable

for_window [class="(?i)gsimplecal"] floating enable, move position mouse, move down $height px
for_window [class="(?i)qemu-system"] floating enable
for_window [class="(?i)blueman"] floating enable
for_window [class="(?i)pinentry"] floating enable
for_window [class="(?i)nm-connection-editor"] floating enable
for_window [title="Firefox - Sharing Indicator"] floating enable
for_window [app_id="firefox" title="Launch Application"] floating enable

for_window [instance="__scratchpad"] floating enable
for_window [instance="__nmtui"] floating enable
for_window [class="(?i)recordmydesktop"] floating enable

for_window [class="(?i)pavucontrol"] floating enable, move position mouse
for_window [class="(?i)pavucontrol" instance="pavucontrol-bar"] move down $height px

for_window [class="Skype"] floating disable


### Force certain windows to pre-designated workspaces
for_window [class="Firefox"] move to workspace $ws1
for_window [class="Firefox"] layout tabbed

for_window [class="Google-chrome"] move to workspace $ws10
for_window [class="Chromium"] move to workspace $ws10
for_window [class="Vmware"] move to workspace $ws5
for_window [class="Crossover"] move to workspace $ws5
for_window [class="Skype"] move to workspace $ws8
for_window [class="Slack"] move to workspace $ws8
for_window [class="zoom"] move to workspace $ws5

# assign doesn't work for spotify due to a bug
# https://community.spotify.com/t5/Desktop-Linux/WM-CLASS-window-property-on-Linux/td-p/1247042
# so use a workaround
#assign [class="Spotify"] workspace $ws7
for_window [class="Spotify"] move to workspace $ws7

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id "pamixer -i 5; notify-send --expire-time=250 '  Raise Volume ['$(pamixer --get-volume)'%]'"
bindsym XF86AudioLowerVolume    exec --no-startup-id "pamixer -d 5; notify-send --expire-time=250 '  Lower Volume ['$(pamixer --get-volume)'%]'"
bindsym XF86AudioMute       exec --no-startup-id "pamixer -t; notify-send --expire-time=250 ' /  Toggle'"

# Sreen brightness controls
bindsym XF86MonBrightnessUp exec light -A 5
bindsym XF86MonBrightnessDown exec light -U 5

# Media player controls
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# lock screen control
bindsym $mod+control+l    exec --no-startup-id $HOME/.config/i3/transfer-sleep-lock-i3lock.sh

# Autostart commands

# nm-applet at startup for configuring wifi connections
exec --no-startup-id nm-applet &

# bluetooth config
exec --no-startup-id blueman-applet &

# Set up the remapping of Caps Lock to Escape for better vim ergonomics
exec_always --no-startup-id $HOME/.config/i3/config-xmodmap.sh

# Always run mako to handle notifications
exec $HOME/.local/bin/mako

# always start firefox
exec firefox
exec chromium-browser
exec flatpak run com.skype.Client --socket=wayland
exec flatpak run com.slack.Slack --socket=wayland
exec flatpak run com.dropbox.Client
exec zoom

# execute a terminal running tmux in workspace two
exec --no-startup-id swaymsg 'workspace $ws2; exec $TERMINAL --command /bin/sh -c "tmux attach -t login-shell || tmuxp load login-shell -y || tmux new-session -t login-shell"'

bar {
    # Run waybar instead of swaybar
    swaybar_command waybar
}
